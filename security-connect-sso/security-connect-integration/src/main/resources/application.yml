server:
  port: 8080          # 改为 HTTPS 端口，避免与 8080 冲突
  ssl:
    enabled: true
    key-store: classpath:ssl/keystore.p12
    key-store-password: changeit   # ${KEYSTORE_PASS}    走环境变量
    key-store-type: PKCS12


spring:
  security:
    oauth2:
      client:
        registration:
          lhubsso:
            client-id: custom-funding-dev
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            redirect-uri: "https://cls.loc.lhubsg.com:8080/api/sg/wb/v1/common/oidc/callback"
            scope: openid   # openid,profile
            provider: lhubsso
        provider:
          lhubsso:
            authorization-uri: https://sc.lhubsg.com/sam/idp/a/lhubstg/oidc/auth
            token-uri: https://sc.lhubsg.com/sam/idp/a/lhubstg/oidc/token
            jwk-set-uri: https://sc.lhubsg.com/sam/idp/a/lhubstg/oidc/.well-known/keys
      resourceserver:
        jwt:
          jwk-set-uri: https://sc.lhubsg.com/sam/idp/a/lhubstg/oidc/.well-known/keys
  application:
    name: security-connect-integration

app:
  security:
    whitelist:
      - /
      - /favicon.ico
      - /login
      - /oauth2/authorization/lhubsso         # 登录入口，跳转 SSO
      - /login/oauth2/code/lhubsso            # 登录回调地址（Spring 自动处理）
      - /sso/front-channel-logout             # SSO 通过浏览器触发的前端注销
      - /sso/back-channel-logout              # SO 后台通知式注销接口

logging:
  level:
    org.springframework.security: DEBUG
